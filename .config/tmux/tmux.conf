# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# vi mode
set-window-option -g mode-keys vi
# vim key bindings for clipboard
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"

# enable focus events for vim autoread
set-option -g focus-events on

# renumber windows when the non-last window is closed
set-option -g renumber-windows on

# set escape timeout to 0 so it doesn't interfere with vim
set -sg escape-time 0

# reload config file
bind r source-file ~/.config/tmux/tmux.conf

# split panes using | and -
bind | split-window -h -l 75 -c '#{pane_current_path}'
bind - split-window -v -l 25 -c '#{pane_current_path}'

# shift+up previous-window shift+down next-window
bind -n M-Left previous-window
bind -n M-Right next-window

# option+n for new window
bind -n M-n new-window
# option+t for a new floating window (unique floating window session per window/tab)
bind -n M-t if-shell "[[ $(tmux display-message -p '#S') = float-* ]] || [[ $(tmux display-message -p '#S') == 'buildproc' ]]" { detach-client } { run-shell "tmux popup -w 95% -h 95% -x 9 -d '#{pane_current_path}' -E 'tmux attach -t \'float-#{pane_id}\' || tmux new -s \'float-#{pane_id}\' \;'" }
# option+o for a floating terminal with two splits for running build processes, not unique per window
bind -n M-o if-shell "[[ $(tmux display-message -p '#S') = 'buildproc' || $(tmux display-message -p '#S') == float-* ]]" { detach-client } { run-shell "tmux popup -w 95% -h 95% -x 9 -d '#{pane_current_path}' -E 'tmux attach -t \'buildproc\' || tmux new -s \'buildproc\' \\\; split-window -v -l 50% \\\; last-pane'" }
# option+g for a floating window with lazygit running in it
bind -n M-g if-shell "[[ $(tmux display-message -p '#S') = 'lazygit' ]]" { kill-session -t 'lazygit' } { run-shell "tmux popup -w 95% -h 95% -x 9 -d '#{pane_current_path}' -E 'lazygit'" }

# Only show status bar when > 1 window
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

set-option -g status-position bottom

# Make Neovim 256 color work properly
set-option -g default-terminal "${TERM}"
# Make undercurls work properly in Neovim
# Undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Load plugins (prefix + I to fetch new plugins)
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/default/blue'

# Run plugin manager
run '~/.tmux/plugins/tpm/tpm'

# overide theme settings
set -g popup-border-lines 'rounded'
set -g @theme-window-status-current-fg '#89ca78'
set -g @theme-window-status-current-bg '#282c34'
set -g base-index 1
set -g pane-base-index 1
set -g status-justify left
set -g status-left ""
set -g status-right ""
set -g window-status-format "#[fg=#{@theme-status-bg},bg=#{@theme-window-status-current-bg}]#[fg=#{@theme-window-status-current-fg},nobold]  #I: #{s|/Users/mat|~|:pane_current_path}  #[fg=#{@theme-window-status-current-bg},bg=#{@theme-status-bg},nobold]"
set -g window-status-current-format "#[fg=#{@theme-status-bg},bg=#{@theme-window-status-current-fg}]#[fg=#{@theme-window-status-current-bg},nobold]  #I: #{s|/Users/mat|~|:pane_current_path}  #[fg=#{@theme-window-status-current-fg},bg=#{@theme-status-bg},nobold]"
